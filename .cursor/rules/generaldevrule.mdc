---
alwaysApply: true
SeparationOfConcerns:
  description: "각 코드 단위는 오직 하나의 명확한 책임만 가져야 하며, 로직·뷰·상태·행위를 명확히 분리해야 한다."
  globs:
    - "로직과 뷰를 분리하세요 (예: API 호출은 컴포넌트 바깥으로)"
    - "상태 저장과 상태 변경 로직을 분리하세요"
    - "하나의 함수는 하나의 목적만 가지도록 작성하세요 ('and'가 들어가면 분리 고려)"

SingleSourceOfTruth:
  description: "중복 없이 데이터의 유일한 진실된 원천을 유지하여 불일치로 인한 버그를 방지하라."
  globs:
    - "파생 가능한 상태는 따로 저장하지 마세요 (예: isLoggedIn은 user로부터 유도)"
    - "전역 상태는 꼭 필요한 데이터에만 사용하세요"
    - "전역 설정값과 상수는 config.ts 또는 .env에 모아서 관리하세요"

IsolatedSideEffects:
  description: "부수 효과는 격리하고, 예측 가능하게 관리하여 시스템의 안정성을 높여야 한다."
  globs:
    - "핵심 로직은 항상 순수 함수로 작성하세요"
    - "부수 효과는 별도 계층(useEffect, 서비스 모듈 등)으로 분리하세요"
    - "Command와 Query는 명확히 분리하세요 (CQS 원칙)"

Immutability:
  description: "데이터를 직접 수정하지 않고, 항상 새로운 사본으로 변경을 기록하라."
  globs:
    - "상태 변경 시 원본 객체를 수정하지 말고 새 객체를 생성하세요"
    - "외부 객체는 방어적 복사를 통해 안전하게 다루세요"
    - "`immer` 같은 불변성 유틸을 적극적으로 활용하세요"

SelfDocumentingCode:
  description: "코드 자체가 가장 좋은 문서가 되도록, 읽기 쉬운 코드와 의도 중심의 주석을 작성하라."
  globs:
    - "이름은 축약 없이 의도와 역할을 명확히 표현하세요"
    - "주석은 '왜' 이 코드가 필요한지를 설명하세요"
    - "ESLint와 Prettier 등으로 스타일을 일관성 있게 유지하세요"
---
